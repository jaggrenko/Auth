Endpoint to check user permissions
---
tags:
  - CHECK_PERMISSIONS
description: check if user belongs to specified roles
requestBody:
  content:
    application/json:
      name: user and possible roles
      description: user and possible roles
      schema:
        $ref: '#/components/schemas/UserRoleRequest'
      example:
        user_id: 7cd483e9-5888-40fd-813a-a382154bcfd2
        role_ids: [a9c6e8da-f2bf-458a-978b-d2f50a031451, 7cf56926-054c-4522-ac6f-d9f5d0e9d18e]
responses:
  200:
    description: Roles were checked successfully
    content:
      application/json:
        schema:
          properties:
          status:
            type: string
          message:
            type: string
          has_permissions:
            type: boolean
        examples:
          approved:
            value:
              status: success
              message: roles were checked successfully
              has_permissions: true
          disapproved:
            value:
              status: success
              message: roles were checked successfully
              has_permissions: false
  401:
    $ref: '#/components/responses/Unauthorized'
  403:
    $ref: '#/components/responses/Forbidden'
  404:
    description: The specified resource was not found
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/Response'
        examples:
          nouser:
            value:
              status: error
              message: user not found
          norole:
            value:
              status: error
              message: role not found
security:
- jwt_auth:
  - write:admin
  - read:admin